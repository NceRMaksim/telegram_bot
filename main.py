import telebot
from telebot import types

bot = telebot.TeleBot("2013984642:AAENYF3qOYFbU-i0wFqO9neNLUu4RNNu7fk")
TO_CHAT_ID = 869656178  # –ù–µ –∑–∞–±—É–¥—å –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω—É–∂–Ω—ã–π id!
poj = open('doc/pojar.txt', 'rb')
photo = open('pict/edds.jpg', 'rb')
dtp_b = open('pict/algoritm/dtp(bez).png', 'rb')

'''
# –ø–µ—Ä–µ—Å–ª–∞—Ç—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(content_types=['text'])
def all_messages(message):
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
'''

# —Ö–µ–ª–ª–æ
@bot.message_handler(commands=['hi', 'Hi'])
def send_hello(message):
    bot.send_message(message.chat.id, "Hello, world!")
    print(message.text, message.from_user.first_name, message.from_user.id)


# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–∫—É
@bot.message_handler(commands=['send'])
def send(message):

    bot.send_photo(message.chat.id, photo)
    bot.reply_to(message, "–õ–æ–≤–∏ —Ñ–æ—Ç–∫—É")


# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'], content_types=['text'])
def commands(message):
    sti = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    if message.text.lower() == '/start':

        # keyboard
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–†—Ç—É—Ç—å")
        item2 = types.KeyboardButton("–ê–ª–≥–æ—Ä–∏—Ç–º—ã")
        item3 = types.KeyboardButton("‚ùì –ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?")
        item4 = types.KeyboardButton("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –î–µ–∂—É—Ä–Ω—ã—Ö —Å–ª—É–∂–±")

        markup.add(item1, item2, item3, item4)

        bot.send_message(message.chat.id,
             "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º. \n –ù–∞–ø–∏—à–∏ –º–Ω–µ –ü—Ä–∏–≤–µ—Ç –∏ —è –¥–æ–±–∞–≤–ª—é —Ç–µ–±—è –≤ –ë–∞–∑—É –¥–∞–Ω–Ω—ã—Ö".format(
                 message.from_user, bot.get_me()),
             parse_mode='html', reply_markup=markup)


#–Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == '–†—Ç—É—Ç—å':
            bot.send_photo(message.chat.id, dtp_b)

        elif message.text == '–ê–ª–≥–æ—Ä–∏—Ç–º—ã':

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–ü–æ–∂–∞—Ä–Ω–∞—è", callback_data='good')
            item2 = types.InlineKeyboardButton("–ü–æ–ª–∏—Ü–∏—è", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–ß—Ç–æ –Ω—É–∂–Ω–æ?', reply_markup=markup)

        elif message.text == '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –î–µ–∂—É—Ä–Ω—ã—Ö —Å–ª—É–∂–±':
            bot.send_message(message.chat.id, '–°–ø—Ä–∞–≤–æ—á–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã:')
            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–ü–æ–∂–∞—Ä–Ω–∞—è", callback_data='good')
            item2 = types.InlineKeyboardButton("–ü–æ–ª–∏—Ü–∏—è", callback_data='bad')
            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–ß—Ç–æ –Ω—É–∂–Ω–æ?', reply_markup=markup)

        elif message.text == '‚ùì –ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?':
            bot.send_message(message.chat.id,
                             '–í–æ—Ç –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —è —É–º–µ—é —á–∏—Ç–∞—Ç—å:'
                             # '\n /start - —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'
                             '\n/help - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º '
                             '\n/send - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é '
                             '\n/check - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

    print(message.text, message.from_user.first_name, message.from_user.id)  # –æ—Ç—Å—ã


#–æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞—Å—Ç–æ—Ä–µ–Ω–∏–µ
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):



    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–î–µ—Ä–∂–∏ –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∂–∞—Ä–Ω–æ–π')
                bot.send_document(call.message.chat.id, poj)
                bot.send_document(call.message.chat.id, "FILEID")
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–î–µ—Ä–∂–∏ –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–ª–∏—Ü–∏–∏')
                bot.send_photo(call.message.chat.id, photo)



            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–î–µ—Ä–∂–∏",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠–¢–û –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!)")

    except Exception as e:
        print(repr(e))

# bot.infinity_polling()
bot.polling(none_stop=True)
